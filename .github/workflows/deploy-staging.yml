name: Deploy Spring Boot to Staging ECS Cluster

on:
  push:
    branches:
      - staging

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build and test
        run: |
          mvn clean install -DskipTests=false

      - name: Package application
        run: mvn package -DskipTests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to ECR
        run: |
          ECR_REPO_URI="209479278439.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/gebio-back-staging"
          IMAGE_TAG="${{ github.sha }}"  # Tag unique basé sur le commit
          
          # Build de l'image Docker
          docker build -t "$ECR_REPO_URI:$IMAGE_TAG" .
          
          # Pousser l'image vers ECR
          docker push "$ECR_REPO_URI:$IMAGE_TAG"
          
          # Tag également 'latest'
          docker tag "$ECR_REPO_URI:$IMAGE_TAG" "$ECR_REPO_URI:latest"
          docker push "$ECR_REPO_URI:latest"

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          cluster: "gebio-back-ecs-cluster-staging"
          service: "gebio-back-ecs-cluster-service-staging"
          task-definition: ".aws/gebio-back-api-staging-task-revision.json"
          wait-for-service-stability: "true"
          force-new-deployment: "true"