name: Deploy Spring Boot to EC2

on:
  push:
    branches:
      - staging

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build and test
        run: |
          mvn clean install -DskipTests=false

      - name: Package application
        run: mvn package -DskipTests

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AWS_EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
          DB_PASSWORD: ${{ secrets.DB_STAGING_PASSWORD }}

        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem && chmod 600 private_key.pem
          
          export SSH_OPTS="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
          
          scp $SSH_OPTS -i private_key.pem bootstrap/target/*.jar ubuntu@$EC2_HOST:~/app.jar

          ssh $SSH_OPTS -i private_key.pem ubuntu@$EC2_HOST << EOF
            
            echo "Stopping old application if running..."
            PID=\$(ps aux | grep 'app.jar' | grep -v grep | awk '{print \$2}')
            if [ -n "\$PID" ]; then
                echo "Stopping process \$PID..."
                kill -9 \$PID
                sleep 5
            else
                echo "No running Java process found."
            fi
            nohup java \
              -DAUTH0_STAGING_ISSUER=${{ secrets.AUTH0_STAGING_ISSUER }} \
              -DAUTH0_STATING_AUDIENCE=${{ secrets.AUTH0_STATING_AUDIENCE }} \
              -DDB_STAGING_PASSWORD=${{ secrets.DB_STAGING_PASSWORD }} \
              -jar ~/app.jar --spring.profiles.active=staging > app.log 2>&1 &
          EOF
          rm -f private_key.pem